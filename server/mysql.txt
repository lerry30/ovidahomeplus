CREATE DATABASE ovida;
USE ovida;

CREATE TABLE employees(
	id INT PRIMARY KEY AUTO_INCREMENT, 
    firstname VARCHAR(255) NOT NULL, 
	lastname VARCHAR(255) NOT NULL, 
	username VARCHAR(255) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	image VARCHAR(255) DEFAULT '',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE suppliers(
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	contact VARCHAR(255) NOT NULL,
	image VARCHAR(255) NOT NULL,
	status ENUM('active', 'inactive') DEFAULT 'active',
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE product_types(
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL UNIQUE,
	image VARCHAR(255) NOT NULL,
	status ENUM('active', 'inactive') DEFAULT 'active',
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE deliveries(
	id INT PRIMARY KEY AUTO_INCREMENT,
	supplier_id INT NOT NULL,
	batch_no INT NOT NULL,
	delivery_reciept_no VARCHAR(255) NOT NULL,
	date DATE NOT NULL,
	FOREIGN KEY(supplier_id) REFERENCES suppliers(id)
);

CREATE TABLE modification_history(
	id INT PRIMARY KEY AUTO_INCREMENT,
	employee_id INT NOT NULL,
	category ENUM('item', 'supplier', 'product', 'delivered') DEFAULT 'item',
	action ENUM('added', 'updated', 'deleted') DEFAULT 'added',
	modification_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE items(
	id INT PRIMARY KEY AUTO_INCREMENT,
	supplier_id INT NOT NULL,
	product_type_id INT NOT NULL,
	description VARCHAR(255) NOT NULL,
	item_code VARCHAR(255) NOT NULL,
	delivery_price DECIMAL(10, 2) NOT NULL,
	srp DECIMAL(10, 2) NOT NULL,
	max_discount DECIMAL(10, 2) NOT NULL,
	unit ENUM('pcs', 'set') DEFAULT 'pcs',
	image VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(product_type_id) REFERENCES product_types(id),
	FOREIGN KEY(supplier_id) REFERENCES suppliers(id)
);

CREATE TABLE disabled_items(
	id INT PRIMARY KEY AUTO_INCREMENT,
	item_id INT NOT NULL,
	note VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(item_id) REFERENCES items(id)
);

CREATE TABLE batches(
	id INT PRIMARY KEY AUTO_INCREMENT,
	batch_no INT NOT NULL UNIQUE,
	delivery_reciept_no VARCHAR(255) NOT NULL,
	delivery_date DATE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE barcodes(
	id INT PRIMARY KEY AUTO_INCREMENT,
	item_id INT NOT NULL,
	batch_no INT NOT NULL,
	barcode VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(item_id) REFERENCES items(id),
	FOREIGN KEY(batch_no) REFERENCES batches(batch_no)
);

CREATE TABLE customers(
	id INT PRIMARY KEY AUTO_INCREMENT,
	firstname VARCHAR(255) NOT NULL,
	lastname VARCHAR(255) NOT NULL,
	address VARCHAR(255) NOT NULL,
	first_contact_no VARCHAR(255) NOT NULL,
	last_contact_no VARCHAR(255) DEFAULT '' NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE sold_items(
	id INT PRIMARY KEY AUTO_INCREMENT,
	barcode_id INT NOT NULL,
	customer_id INT NOT NULL,
	payment_method VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(barcode_id) REFERENCES barcodes(id),
	FOREIGN KEY(customer_id) REFERENCES customers(id)
);